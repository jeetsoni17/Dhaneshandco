{"version":3,"file":"component---src-pages-contact-js-b41d9dc832c3a5b4da0d.js","mappings":"iMAIA,MAAMA,EAAcC,IAAwC,IAAvC,UAAEC,EAAS,SAAEC,EAAQ,SAAEC,GAAUH,EACpD,MAAMI,EAASF,EAAW,GAAK,GAE/B,OACEG,EAAAA,EAAAA,GAAA,OAAKJ,UAAW,CAACA,EAAW,8BAA8BK,KAAK,OAC7DD,EAAAA,EAAAA,GAAA,OACEJ,UAAW,UAAUG,+CAEpBD,GAEC,EAMV,OAF0BI,EAAAA,EAAAA,GAAOR,EAAW,CAAAS,OAAA,YAAlBD,CAAmB,IAmB7CR,EAAYU,aAAe,CACzBP,UAAU,EACVC,SAAU,GACVF,UAAW,G,yFCpCb,MAAMS,EAAaV,IAAA,IAAC,UAAEC,EAAS,KAAEU,GAAMX,EAAA,OACrCK,EAAAA,EAAAA,GAAA,OAAKJ,UAAW,CAAC,SAAUA,GAAWK,KAAK,OACzCD,EAAAA,EAAAA,GAAA,KAAGJ,UAAW,CAACU,EAAM,yBAAyBL,KAAK,OAC/C,EAaR,OAVyBC,EAAAA,EAAAA,GAAOG,EAAU,CAAAF,OAAA,YAAjBD,CAAkB,CAAAK,KAAA,SAAAC,OAAA,6DAuB3CH,EAAWD,aAAe,CACxBE,KAAM,GACNV,UAAW,G,yFC/Bb,MAAMa,EAAgBd,IAAA,IAAC,UAAEC,EAAS,WAAEc,EAAU,SAAEZ,EAAQ,GAAEa,EAAE,MAAEC,GAAOjB,EAAA,OACnEK,EAAAA,EAAAA,GAAAa,EAAAA,SAAA,KACGC,MAAMC,QAAQL,GACbA,EAAWM,KAAIC,IACbjB,EAAAA,EAAAA,GAAA,KAAGJ,UAAW,CAACA,EAAWe,GAAIV,KAAK,MAChCgB,EAAU,IAAEnB,MAIjBE,EAAAA,EAAAA,GAAA,KAAGJ,UAAW,CAACA,EAAWe,GAAIV,KAAK,MAChCS,EAAW,IAAEZ,GAGjB,EAOL,OAJ4BI,EAAAA,EAAAA,GAAOO,EAAa,CAAAN,OAAA,aAApBD,CAAqB,cAClCgB,GAAUA,EAAMN,MAAQ,OAAS,WAAU,KA4B1DH,EAAcL,aAAe,CAAC,C,yFC7C9B,MAAMe,EAAaxB,IAAiD,IAAhD,SAAEG,EAAQ,UAAEF,EAAS,QAAEwB,EAAO,SAAEvB,GAAUF,EAC5D,MAAM0B,EAAQxB,EAAW,GAAK,GACxByB,EAAYC,KAAKC,MAAMH,EAAQD,GAErC,OACEpB,EAAAA,EAAAA,GAAA,OAAKJ,UAAW,CAAC,6BAA8BA,GAAWK,KAAK,MAC5DH,EAASkB,KAAIS,IACZzB,EAAAA,EAAAA,GAAA,OAAKJ,UAAW,iBAAiB0B,UAAmBG,KAElD,EAMV,OAFyBvB,EAAAA,EAAAA,GAAOiB,EAAU,CAAAhB,OAAA,YAAjBD,CAAkB,IAuB3CiB,EAAWf,aAAe,CACxBR,UAAW,GACXE,SAAU,CACR,CACEQ,KAAM,gBACNoB,OAAQ,UACRC,KACE,qFACF/B,UAAW,IAEb,CACEU,KAAM,gBACNoB,OAAQ,UACRC,KACE,qFACF/B,UAAW,IAEb,CACEU,KAAM,gBACNoB,OAAQ,UACRC,KACE,qFACF/B,UAAW,K,wHC1DjB,MAAMgC,EAA0BjC,IAAyC,IAAxC,SAAEG,EAAQ,UAAEF,EAAS,MAAEiC,EAAK,GAAElB,GAAIhB,EACjE,MAAMmC,EAAUD,EAAQ,WAAa,GAErC,OACE7B,EAAAA,EAAAA,GAAA,WAASJ,UAAW,CAAC,kBAAmBkC,EAASlC,EAAWe,GAAIV,KAAK,OACnED,EAAAA,EAAAA,GAAA,OAAKJ,UAAU,kBAAkBE,GACzB,EAMd,OAFsCI,EAAAA,EAAAA,GAAO0B,EAAuB,CAAAzB,OAAA,YAA9BD,CAA+B,IAuBrE0B,EAAwBxB,aAAe,CACrCN,SAAU,GACVF,UAAW,GACXiC,MAAO,I,wECOT,MA/CkB,CAChBE,cACE,mIACFC,oBAAqB,CACnB,CACE1B,KAAM,gBACNoB,OAAQ,QACRC,KAAM,oBACNM,KAAM,oDAER,CACE3B,KAAM,aACNoB,OAAQ,QACRC,KAAM,iBACNM,KAAM,oBAER,CACE3B,KAAM,wBACNoB,OAAQ,UACRC,KAAM,UACNM,KAAM,8CAGVC,QAAS,CACP,CACEC,SAAU,oEACVC,OAAQ,6GAEV,CACED,SAAU,0CACVC,OAAQ,8JAEV,CACED,SAAU,6DACVC,OAAQ,uKAEV,CACED,SAAU,8CACVC,OAAQ,qOAEV,CACED,SAAU,gDACVC,OAAQ,iI,4DCvBd,MAAMC,EAAc1C,IAA0B,IAAzB,KAAE2C,EAAI,UAAE1C,GAAWD,EACtC,MAAM,cAAEoC,EAAa,oBAAEC,GAAwBO,EAE/C,OACEvC,EAAAA,EAAAA,GAACwC,EAAAA,EAAM,CAAC5C,UAAWA,EAAW6C,SAAO,IACnCzC,EAAAA,EAAAA,GAAC0C,EAAAA,EAAG,CACFC,MAAM,kBACNC,YAAY,4GAGd5C,EAAAA,EAAAA,GAAC4B,EAAuB,CAAChC,UAAU,mCACjCI,EAAAA,EAAAA,GAACN,EAAAA,EAAW,MACVM,EAAAA,EAAAA,GAAC6C,EAAAA,EAAU,CAACC,WAAW,sBACvB9C,EAAAA,EAAAA,GAACS,EAAAA,EAAa,CAACC,WAAYqB,MAG7B/B,EAAAA,EAAAA,GAACmB,EAAAA,EAAU,CAACC,QAAS,GAClBY,EAAoBhB,KAAI,CAAC+B,EAAMC,KAC9BhD,EAAAA,EAAAA,GAACiD,EAAAA,EAAU,CAAChB,KAAMc,EAAKd,KAAMiB,IAAKF,IAChChD,EAAAA,EAAAA,GAACK,EAAAA,EAAU,CAACC,KAAMyC,EAAKzC,QACvBN,EAAAA,EAAAA,GAACS,EAAAA,EAAa,CACZC,WAAYqC,EAAKpB,KACjBhB,GAAG,wCACHC,OAAK,SAMbZ,EAAAA,EAAAA,GAACN,EAAAA,EAAW,MACVM,EAAAA,EAAAA,GAAC6C,EAAAA,EAAU,CAACC,WAAW,gCACvB9C,EAAAA,EAAAA,GAACmD,EAAY,CAACC,KAAMb,EAAUL,aAIlClC,EAAAA,EAAAA,GAACqD,EAAAA,EAAM,MAAG,IACH,EAIPF,EAAeG,IAAe,IAAd,KAAEF,GAAME,EAC5B,OACEtD,EAAAA,EAAAA,GAAA,WACGoD,EAAKpC,KAAI,CAACuC,EAAKP,KACdhD,EAAAA,EAAAA,GAACwD,EAAAA,EAAS,CACRN,IAAKF,EACLS,MAAO,CAAEC,aAAc,OAAQC,gBAAiB,cAAeC,UAAW,UAE1E5D,EAAAA,EAAAA,GAAC6D,EAAAA,EAAgB,CAACC,YAAY9D,EAAAA,EAAAA,GAAC+D,EAAAA,EAAc,MAAK,gBAAe,QAAQf,YAAiBgB,GAAI,QAAQhB,aACpGhD,EAAAA,EAAAA,GAACiE,EAAAA,EAAU,CAACC,QAAQ,SAAQ,IACzBX,EAAIpB,YAGTnC,EAAAA,EAAAA,GAACmE,EAAAA,EAAgB,CAACV,MAAO,CAAEE,gBAAiB,gBAAiB,KAC3D3D,EAAAA,EAAAA,GAACiE,EAAAA,EAAU,CAACC,QAAQ,QAAQrC,MAAM,iBAC/B0B,EAAInB,YAKT,EAsBV,OAlB0BlC,EAAAA,EAAAA,GAAOmC,EAAW,CAAAlC,OAAA,aAAlBD,CAAmB,CAAAK,KAAA,SAAAC,OAAA,qI","sources":["webpack://dhanesh-and-company/./src/components/ContentText/ContentText.js","webpack://dhanesh-and-company/./src/components/SimpleIcon/SimpleIcon.js","webpack://dhanesh-and-company/./src/components/TextParagraph/TextParagraph.js","webpack://dhanesh-and-company/./src/components/TriSection/TriSection.js","webpack://dhanesh-and-company/./src/components/ContentBlockContactPage/ContentBlockContactPage.js","webpack://dhanesh-and-company/./src/pagesInput/contact.js","webpack://dhanesh-and-company/./src/pages/contact.js"],"sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContentText = ({ className, xtraWide, children }) => {\r\n  const colums = xtraWide ? 12 : 10\r\n\r\n  return (\r\n    <div className={[className, 'row justify-content-center'].join(' ')}>\r\n      <div\r\n        className={`col-xl-${colums} d-flex flex-column justify-content-around`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StyledContentText = styled(ContentText)``\r\n\r\nexport default StyledContentText\r\n\r\nContentText.propTypes = {\r\n  /**\r\n   * Header Content\r\n   */\r\n  xtraWide: PropTypes.bool,\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Additional elements to add\r\n   */\r\n  children: PropTypes.object,\r\n}\r\n\r\nContentText.defaultProps = {\r\n  xtraWide: false,\r\n  children: '',\r\n  className: '',\r\n}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SimpleIcon = ({ className, icon }) => (\r\n  <div className={['d-flex', className].join(' ')}>\r\n    <i className={[icon, 'm-auto text-highlight'].join(' ')} />\r\n  </div>\r\n)\r\n\r\nconst StyledSimpleIcon = styled(SimpleIcon)`\r\n  height: 7rem;\r\n  i {\r\n    font-size: 4.5rem;\r\n    &:hover {\r\n      font-size: 5rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default StyledSimpleIcon\r\n\r\nSimpleIcon.propTypes = {\r\n  /**\r\n   * Content to go in container\r\n   */\r\n  icon: PropTypes.string,\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  className: PropTypes.string,\r\n}\r\n\r\nSimpleIcon.defaultProps = {\r\n  icon: '',\r\n  className: '',\r\n}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextParagraph = ({ className, paragraphs, children, bs, small }) => (\r\n  <>\r\n    {Array.isArray(paragraphs) ? (\r\n      paragraphs.map(paragraph => (\r\n        <p className={[className, bs].join(' ')}>\r\n          {paragraph} {children}\r\n        </p>\r\n      ))\r\n    ) : (\r\n      <p className={[className, bs].join(' ')}>\r\n        {paragraphs} {children}\r\n      </p>\r\n    )}\r\n  </>\r\n)\r\n\r\nconst StyledTextParagraph = styled(TextParagraph)`\r\n  font-size: ${props => (props.small ? '1rem' : '1.25rem')};\r\n`\r\n\r\nexport default StyledTextParagraph\r\n\r\nTextParagraph.propTypes = {\r\n  /**\r\n   * Header Content\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Header Content\r\n   */\r\n  children: PropTypes.object,\r\n  /**\r\n   * Set background color of container.  Use either props.color or leave blank.\r\n   */\r\n  paragraphs: PropTypes.array,\r\n  /**\r\n   * Set background color of container.  Use either props.color or leave blank.\r\n   */\r\n  small: PropTypes.bool,\r\n  /**\r\n   * Set background color of container.  Use either props.color or leave blank.\r\n   */\r\n  bs: PropTypes.string,\r\n}\r\n\r\nTextParagraph.defaultProps = {}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TriSection = ({ children, className, noCards, xtraWide }) => {\r\n  const width = xtraWide ? 12 : 10\r\n  const cardWidth = Math.floor(width / noCards)\r\n\r\n  return (\r\n    <div className={['row justify-content-center', className].join(' ')}>\r\n      {children.map(child => (\r\n        <div className={`col-12 col-md-${cardWidth} mb-4`}>{child}</div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StyledTriSection = styled(TriSection)``\r\n\r\nexport default StyledTriSection\r\n\r\nTriSection.propTypes = {\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  children: PropTypes.object,\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Title of info section.\r\n   */\r\n  noCards: PropTypes.number,\r\n  /**\r\n   * Title of info section.\r\n   */\r\n  xtraWide: PropTypes.bool,\r\n}\r\n\r\nTriSection.defaultProps = {\r\n  className: '',\r\n  children: [\r\n    {\r\n      icon: 'icon-question',\r\n      header: 'Disrupt',\r\n      text:\r\n        'Take action and be accountable for building positive habits to achieve your goals.',\r\n      className: '',\r\n    },\r\n    {\r\n      icon: 'icon-question',\r\n      header: 'Disrupt',\r\n      text:\r\n        'Take action and be accountable for building positive habits to achieve your goals.',\r\n      className: '',\r\n    },\r\n    {\r\n      icon: 'icon-question',\r\n      header: 'Disrupt',\r\n      text:\r\n        'Take action and be accountable for building positive habits to achieve your goals.',\r\n      className: '',\r\n    },\r\n  ],\r\n}\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContentBlockContactPage = ({ children, className, color, bs }) => {\r\n  const colorBG = color ? 'bg-light' : ''\r\n\r\n  return (\r\n    <section className={['container-fluid', colorBG, className, bs].join(' ')}>\r\n      <div className=\"container py-5\">{children}</div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst StyledContentBlockContactPage = styled(ContentBlockContactPage)``\r\n\r\nexport default StyledContentBlockContactPage\r\n\r\nContentBlockContactPage.propTypes = {\r\n  /**\r\n   * Content to go in container\r\n   */\r\n  children: PropTypes.object,\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Set background color of container.  Use either props.color or leave blank.\r\n   */\r\n  color: PropTypes.object,\r\n  /**\r\n   * Set background color of container.  Use either props.color or leave blank.\r\n   */\r\n  bs: PropTypes.string,\r\n}\r\n\r\nContentBlockContactPage.defaultProps = {\r\n  children: '',\r\n  className: '',\r\n  color: '',\r\n}\r\n","const inputData = {\r\n  openParagraph:\r\n    \"So whether you are looking to upgrade your home appliances or need new switchgear, it is best to approach the dealers in Mumbai.\",\r\n  contactOptionsArray: [\r\n    {\r\n      icon: 'icon-envelope',\r\n      header: 'Email',\r\n      text: 'dhanesh@gmail.com',\r\n      href: 'mailto:dhanesh@gmail.com?subject=Product enquiry',\r\n    },\r\n    {\r\n      icon: 'icon-phone',\r\n      header: 'Phone',\r\n      text: '022 - 99999999',\r\n      href: 'tel:022-99999999',\r\n    },\r\n    {\r\n      icon: 'fas fa-map-marker-alt',\r\n      header: 'Address',\r\n      text: 'Address',\r\n      href: 'https://maps.app.goo.gl/vxUCzqwaCX15NhMg9',\r\n    },\r\n  ],\r\n  faqText: [\r\n    {\r\n      question: \"Does an electric goods dealer also provide installation services?\",\r\n      answer: \"Yes, many dealers provide installation services to customers for appliances that need expert supervision.\",\r\n    },\r\n    {\r\n      question: \"Does Dhanesh & Co have modular sockets?\",\r\n      answer: \"Most Electrical Goods Dealers provide modular sockets and switches on sale. You can directly call the dealer and inquire about the product's availability.\",\r\n    },\r\n    {\r\n      question: \"What appliances and gadgets are available at Dhanesh & Co?\",\r\n      answer: \"As Dhanesh & Co is an authorised electric goods dealer in Mumbai, it has every essential electrical appliance and gadget like wires, switchboards, capacitors, etc.\",\r\n    },\r\n    {\r\n      question: \"Can I get my electrical appliance replaced?\",\r\n      answer: \"Yes, many dealers provide replacement services only if the gadget you purchased is on the warranty period. We suggest you directly contact Dhanesh & Co to check if the service is available for any particular appliance or not.\",\r\n    },\r\n    {\r\n      question: \"Is repairing service available at the dealer?\",\r\n      answer: \"Not all dealers provide repairing services. It is better to consult Dhanesh & Co to check if they can assist with the same.\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default inputData;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport Layout from '../components/layout';\r\nimport ContentBlockContactPage from '../components/ContentBlockContactPage';\r\nimport TextHeader from '../components/TextHeader';\r\nimport TextParagraph from '../components/TextParagraph';\r\nimport ContentText from '../components/ContentText';\r\nimport TriSection from '../components/TriSection';\r\nimport SimpleIcon from '../components/SimpleIcon';\r\nimport TextAnchor from '../components/TextAnchor';\r\nimport SEO from '../components/seo';\r\nimport inputData from '../pagesInput/contact';\r\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Footer from '../components/Footer'; // Import the Footer component\r\n\r\nconst ContactPage = ({ data, className }) => {\r\n  const { openParagraph, contactOptionsArray } = inputData;\r\n\r\n  return (\r\n    <Layout className={className} contact>\r\n      <SEO\r\n        title=\"Contact Details\"\r\n        description=\"Contact Dhanesh and company to get enquiry and product details. Email: dhanesh@essentialcoaching.co.uk\"\r\n      />\r\n\r\n      <ContentBlockContactPage className=\"d-flex align-items-center py-5\">\r\n        <ContentText>\r\n          <TextHeader mainHeader=\"Let's Connect...\" />\r\n          <TextParagraph paragraphs={openParagraph} />\r\n        </ContentText>\r\n\r\n        <TriSection noCards={3}>\r\n          {contactOptionsArray.map((item, index) => (\r\n            <TextAnchor href={item.href} key={index}>\r\n              <SimpleIcon icon={item.icon} />\r\n              <TextParagraph\r\n                paragraphs={item.text}\r\n                bs=\"text-center text-break text-highlight\"\r\n                small\r\n              />\r\n            </TextAnchor>\r\n          ))}\r\n        </TriSection>\r\n\r\n        <ContentText>\r\n          <TextHeader mainHeader=\"Frequently Asked Questions\" />\r\n          <FAQAccordion faqs={inputData.faqText} />\r\n        </ContentText>\r\n      </ContentBlockContactPage>\r\n\r\n      <Footer /> {/* Add Footer here */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst FAQAccordion = ({ faqs }) => {\r\n  return (\r\n    <div>\r\n      {faqs.map((faq, index) => (\r\n        <Accordion \r\n          key={index} \r\n          style={{ marginBottom: '1rem', backgroundColor: 'transparent', boxShadow: 'none' }} // Set background and remove shadow\r\n        >\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={`panel${index}-content`} id={`panel${index}-header`}>\r\n            <Typography variant=\"body1\"> {/* Removed fontWeight to keep it normal */}\r\n              {faq.question}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails style={{ backgroundColor: 'transparent' }}> {/* Ensure details background is also transparent */}\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {faq.answer}\r\n            </Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledContactPage = styled(ContactPage)`\r\n  a {\r\n    text-decoration: inherit;\r\n    color: black;\r\n  }\r\n\r\n  a:visited {\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n  }\r\n\r\n  .content {\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    /* Removed background color and shadow for seamless integration */\r\n  }\r\n`;\r\n\r\nexport default StyledContactPage;\r\n\r\nContactPage.propTypes = {\r\n  data: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n"],"names":["ContentText","_ref","className","xtraWide","children","colums","___EmotionJSX","join","_styled","target","defaultProps","SimpleIcon","icon","name","styles","TextParagraph","paragraphs","bs","small","React","Array","isArray","map","paragraph","props","TriSection","noCards","width","cardWidth","Math","floor","child","header","text","ContentBlockContactPage","color","colorBG","openParagraph","contactOptionsArray","href","faqText","question","answer","ContactPage","data","inputData","Layout","contact","SEO","title","description","TextHeader","mainHeader","item","index","TextAnchor","key","FAQAccordion","faqs","Footer","_ref2","faq","Accordion","style","marginBottom","backgroundColor","boxShadow","AccordionSummary","expandIcon","ExpandMoreIcon","id","Typography","variant","AccordionDetails"],"sourceRoot":""}