{"version":3,"file":"component---src-pages-pricelist-js-d118608defcfeb220b63.js","mappings":"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","sources":["webpack://dhanesh-and-company/./src/components/BlogPostContainer/BlogPostContainer.js","webpack://dhanesh-and-company/./src/pagesInput/pricelist.js","webpack://dhanesh-and-company/./src/pages/pricelist.js"],"sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogPostContainer = ({ className, xtraWide, cards, children }) => {\r\n  const width = xtraWide ? 12 : 10\r\n  const cardWidthMed = Math.floor(width / (cards - 1))\r\n  const cardWidthLarge = Math.floor(width / cards)\r\n\r\n  return (\r\n    <div className={[className, 'row d-flex flex-wrap'].join(' ')}>\r\n      {children.map(child => (\r\n        <div\r\n          className={`col-12 col-md-${cardWidthMed} col-lg-${cardWidthLarge} mb-4`}\r\n        >\r\n          {child}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StyledBlogPostContainer = styled(BlogPostContainer)``\r\n\r\nexport default StyledBlogPostContainer\r\n\r\nBlogPostContainer.propTypes = {\r\n  /**\r\n   * Header Content\r\n   */\r\n  xtraWide: PropTypes.bool,\r\n  /**\r\n   * Emotion classname\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Additional elements to add\r\n   */\r\n  children: PropTypes.object,\r\n}\r\n\r\nBlogPostContainer.defaultProps = {\r\n  xtraWide: false,\r\n  children: '',\r\n  className: '',\r\n}\r\n","const inputData = {\r\n  blogArray: [\r\n    {\r\n      link: '/images/blog/trial.pdf',\r\n      \r\n      title: 'Future Proof Your Skills!',\r\n      summary: 'Here is info about the first product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n    {\r\n      link: '/images/blog/trial.pdf',\r\n     \r\n      title: 'What exactly is career coaching?',\r\n      summary: 'Here is info about the second product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n    {\r\n      link: 'what-kind-of-coach-do-i-need',\r\n  \r\n      title: 'What kind of coach do I need?',\r\n      \r\n      summary: 'Here is info about the third product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n    {\r\n      link: 'why-do-i-need-a-careers-coach',\r\n     \r\n      title: 'Why do I need a careers coach?',\r\n      \r\n      summary: 'Here is info about the fourth product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n    {\r\n      link: 'how-to-choose-a-career-path',\r\n      \r\n      title: 'How to choose a career path?',\r\n      \r\n      summary: 'Here is info about the fifth product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n    {\r\n      link: 'effective-time-management-skills',\r\n      \r\n      title: 'prodcut 6',\r\n      \r\n      summary: 'Here is info about the sixth product.',\r\n      body_delta: '',\r\n      image_filename: 'trial1',\r\n      __v: 0,\r\n    },\r\n  ],\r\n}\r\n\r\nexport default inputData\r\n","import React, { useState, useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion'; // Importing framer-motion for animations\r\n\r\nimport Layout from '../components/layout';\r\nimport ContentBlock from '../components/ContentBlock';\r\nimport FeaturedBlogPost from '../components/FeaturedBlogPost';\r\nimport BlogPostContainer from '../components/BlogPostContainer';\r\nimport TextHeader from '../components/TextHeader';\r\nimport inputData from '../pagesInput/pricelist';\r\nimport SEO from '../components/seo';\r\n\r\n// Destructuring the blog array from the inputData object.\r\nconst { blogArray } = inputData;\r\n\r\nconst BlogHomePage = ({ data }) => {\r\n  const [isLoading, setIsLoading] = useState(false); // State for loading status\r\n  const [blogPosts, setBlogPosts] = useState(blogArray); // State to store blog posts\r\n\r\n  // Extracting images fetched via GraphQL query\r\n  const blogImage1 = data.blogImage1.childImageSharp.fluid;\r\n  const blogImage2 = data.blogImage2.childImageSharp.fluid;\r\n  const blogImage3 = data.blogImage3.childImageSharp.fluid;\r\n  const blogImage4 = data.blogImage4.childImageSharp.fluid;\r\n  const blogImage5 = data.blogImage5.childImageSharp.fluid; // New blog image 5\r\n  const blogImage6 = data.blogImage6.childImageSharp.fluid; // New blog image 6\r\n\r\n  // Array to hold all blog images\r\n  const blogImageArray = [blogImage1, blogImage2, blogImage3, blogImage4, blogImage5, blogImage6];\r\n\r\n  // Function to sort blog posts by date, most recent first\r\n  const sortPostsMostRecent = (array) =>\r\n    array.sort((a, b) => {\r\n      const c = new Date(a.post_date); // Convert post_date to Date object\r\n      const d = new Date(b.post_date); // Convert post_date to Date object\r\n      return d - c; // Sort by date in descending order (most recent first)\r\n    });\r\n\r\n  // Side effect hook to fetch blog posts from an external API (currently commented out)\r\n  useEffect(() => {\r\n    /*\r\n    const allBlogPostsURL = `https://josephfletcher.co.uk/blog-backend/api/blogposts`\r\n    fetch(allBlogPostsURL, {})\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        setBlogPosts(sortPostsMostRecent(response)); // Set sorted blog posts\r\n        setIsLoading(false); // Set loading status to false\r\n      })\r\n      .catch(error => console.log(error));\r\n    */\r\n  }, []); // Empty dependency array to run effect only once on component mount\r\n\r\n  return (\r\n    <Layout>\r\n      {/* SEO component for meta tags */}\r\n      <SEO title=\"Price List\" description=\"Price List\" />\r\n\r\n      {/* Header component for the blog page */}\r\n      <TextHeader mainHeader=\"Price List\" size=\"Large\" />\r\n\r\n      {/* Check if the data is still loading */}\r\n      {!isLoading ? (\r\n        <ContentBlock>\r\n          <BlogPostContainer xtraWide cards={3}>\r\n            {/* Loop over blogPosts array and display each blog with animations */}\r\n            {blogPosts.map((blog, index) => (\r\n              <motion.div \r\n                key={blog._id} // Unique key for each blog post\r\n                initial={{ opacity: 0, y: 20 }} // Initial animation state\r\n                animate={{ opacity: 1, y: 0 }} // Final animation state\r\n                transition={{ duration: 0.5, delay: index * 0.1 }} // Animation transition settings\r\n              >\r\n                <FeaturedBlogPost\r\n                  blogInfo={blog} // Blog information\r\n                  image={blogImageArray[index]} // Corresponding blog image\r\n                />\r\n              </motion.div>\r\n            ))}\r\n          </BlogPostContainer>\r\n        </ContentBlock>\r\n      ) : (\r\n        <ContentBlock>\r\n          {/* Loading state - can be styled for loaders or spinners */}\r\n          <BlogPostContainer xtraWide cards={3}>\r\n            {blogPosts.map((blog, index) => (\r\n              <FeaturedBlogPost\r\n                key={blog._id}\r\n                blogInfo={blog}\r\n                image={blogImageArray[index]}\r\n              />\r\n            ))}\r\n          </BlogPostContainer>\r\n        </ContentBlock>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogHomePage;\r\n\r\n// GraphQL fragment for reusable blog image queries\r\nexport const blogImageMainFragment = graphql`\r\n  fragment blogImageMain on File {\r\n    childImageSharp {\r\n      fluid(maxWidth: 400, quality: 100) {\r\n        ...GatsbyImageSharpFluid\r\n        ...GatsbyImageSharpFluidLimitPresentationSize\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// PageQuery to fetch images for blogs\r\nexport const pageQuery = graphql`\r\n  query {\r\n    projectHero: file(relativePath: { eq: \"hero/trial1.png\" }) {\r\n      ...fluidImage\r\n    }\r\n    blogImage2: file(relativePath: { eq: \"blog/trial1.png\" }) {\r\n      ...blogImageMain\r\n    }\r\n    blogImage3: file(relativePath: { eq: \"blog/trial1.png\" }) {\r\n      ...blogImageMain\r\n    }\r\n    blogImage4: file(relativePath: { eq: \"blog/trial1.png\" }) {\r\n      ...blogImageMain\r\n    }\r\n    blogImage1: file(relativePath: { eq: \"blog/trial1.png\" }) {\r\n      ...blogImageMain\r\n    }\r\n    blogImage5: file(relativePath: { eq: \"blog/trial1.png\" }) {  \r\n      ...blogImageMain\r\n    }\r\n    blogImage6: file(relativePath: { eq: \"blog/trial1.png\" }) {  \r\n      ...blogImageMain\r\n    }\r\n  }\r\n`;\r\n\r\n// PropTypes for data validation\r\nBlogHomePage.propTypes = { data: PropTypes.object };\r\nBlogHomePage.defaultProps = { data: {} };\r\n  "],"names":["BlogPostContainer","_ref","className","xtraWide","cards","children","width","cardWidthMed","Math","floor","cardWidthLarge","___EmotionJSX","join","map","child","_styled","target","defaultProps","blogArray","link","title","summary","body_delta","image_filename","__v","inputData","BlogHomePage","data","isLoading","setIsLoading","useState","blogPosts","setBlogPosts","blogImageArray","blogImage1","childImageSharp","fluid","blogImage2","blogImage3","blogImage4","blogImage5","blogImage6","useEffect","Layout","SEO","description","TextHeader","mainHeader","size","ContentBlock","blog","index","FeaturedBlogPost","key","_id","blogInfo","image","motion","div","initial","opacity","y","animate","transition","duration","delay"],"sourceRoot":""}