{"version":3,"file":"component---src-pages-pricelist-js-f231670020bdafe98b31.js","mappings":"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","sources":["webpack://dhanesh-and-company/./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js","webpack://dhanesh-and-company/./src/components/BlogPostImage/BlogPostImage.js","webpack://dhanesh-and-company/./src/components/FeaturedBlogPost/FeaturedBlogPost.js","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://dhanesh-and-company/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://dhanesh-and-company/./src/components/BlogPostContainer/BlogPostContainer.js","webpack://dhanesh-and-company/./src/pages/pricelist.js"],"sourcesContent":["import createStyled from '../base/dist/emotion-styled-base.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport 'react';\nimport '@emotion/is-prop-valid';\nimport '@emotion/react';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = createStyled.bind();\ntags.forEach(function (tagName) {\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport { newStyled as default };\n","/* eslint-disable global-require */\n/* eslint-disable import/no-dynamic-require */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport Img from 'gatsby-image'\n\nconst BlogPostImage = ({ className, image, src }) => (\n  <Img\n    className={[className, 'w-75 mb-3 mx-auto'].join(' ')}\n    style={{ borderRadius: '0' }} // Adjust as needed\n    fluid={image}\n/>\n\n  /*  \n  <img\n    className={[\n      'w-75 d-block rounded-circle mb-3 mx-auto border',\n      className,\n    ].join(' ')}\n    src={`/${src}`}\n    alt=\"Placeholder for blogpost\"\n  />\n*/\n)\n\nBlogPostImage.propTypes = {\n  className: PropTypes.object,\n  image: PropTypes.object,\n  src: PropTypes.string,\n}\n\nconst StyledBlogPostImage = styled(BlogPostImage)``\n\nexport default StyledBlogPostImage\n\nBlogPostImage.defaultProps = {}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport BlogPostImage from '../BlogPostImage';\nimport TextHeader from '../TextHeader';\nimport TextParagraph from '../TextParagraph';\nimport Button from '../Button/Button';\n\n// FeaturedPost component to display a blog post with image, title, description, and PDF download button\nconst FeaturedPost = ({ blogInfo, pricelistTitle, image, src }) => {\n  // Extracting data from blogInfo\n  const { title, summary, link } = blogInfo;\n\n  // Function to handle PDF download\n  const handleDownload = async () => {\n    try {\n      const response = await fetch(link); // Fetch the PDF file from the provided link\n      if (!response.ok) throw new Error('Failed to download the file.');\n\n      const blob = await response.blob(); // Convert the response to a blob\n      const url = window.URL.createObjectURL(blob);\n\n      // Create and trigger the temporary download link\n      const tempLink = document.createElement('a');\n      tempLink.href = url;\n      tempLink.download = `${title || 'file'}.pdf`; // Default filename if title is unavailable\n      tempLink.click();\n\n      // Clean up the URL object\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading the file:', error);\n    }\n  };\n\n  return (\n    <div className=\"h-100 border-rounded shadow-sm d-flex flex-wrap px-3 pb-3\">\n      <div className=\"w-100\">\n        {/* Display the blog image */}\n        <div style={{ textAlign: 'center', marginBottom: '10px' }}>\n          <BlogPostImage image={image} src={src} />\n        </div>\n\n        {/* Display the product title below the image */}\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <TextHeader\n            size=\"medium\"\n            mainHeader={pricelistTitle || title} // Title fallback to blog post title\n            alignHeader=\"center\"\n          />\n        </div>\n\n        {/* Display the summary of the blog post */}\n        <TextParagraph paragraphs={summary} small />\n\n        {/* Button to trigger PDF download */}\n        <Button onClick={handleDownload} target=\"_blank\" rel=\"noopener noreferrer\">\n          Download PDF\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n// PropTypes validation\nFeaturedPost.propTypes = {\n  blogInfo: PropTypes.object.isRequired, // Object containing blog post data\n  pricelistTitle: PropTypes.string, // Title passed explicitly, fallback for blog title\n  image: PropTypes.string, // Image URL for the blog post\n  src: PropTypes.string, // Source URL for the image\n};\n\n// Default props for the component\nFeaturedPost.defaultProps = {\n  pricelistTitle: 'Untitled Product', // Default title if not provided\n  image: '', // Default value for image URL\n  src: '', // Default value for image source\n};\n\nexport default FeaturedPost;\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst BlogPostContainer = ({ className, xtraWide, cards, children }) => {\n  const width = xtraWide ? 12 : 10\n  const cardWidthMed = Math.floor(width / (cards - 1))\n  const cardWidthLarge = Math.floor(width / cards)\n\n  return (\n    <div className={[className, 'row d-flex flex-wrap'].join(' ')}>\n      {children.map(child => (\n        <div\n          className={`col-12 col-md-${cardWidthMed} col-lg-${cardWidthLarge} mb-4`}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst StyledBlogPostContainer = styled(BlogPostContainer)``\n\nexport default StyledBlogPostContainer\n\nBlogPostContainer.propTypes = {\n  /**\n   * Header Content\n   */\n  xtraWide: PropTypes.bool,\n  /**\n   * Emotion classname\n   */\n  className: PropTypes.string,\n  /**\n   * Additional elements to add\n   */\n  children: PropTypes.object,\n}\n\nBlogPostContainer.defaultProps = {\n  xtraWide: false,\n  children: '',\n  className: '',\n}\n","import React, { useState, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\n\nimport Layout from '../components/layout';\nimport ContentBlock from '../components/ContentBlock';\nimport FeaturedBlogPost from '../components/FeaturedBlogPost';\nimport BlogPostContainer from '../components/BlogPostContainer';\nimport TextHeader from '../components/TextHeader';\nimport SEO from '../components/seo';\n\nconst PriceList = ({ data }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [priceListData, setPriceListData] = useState([]);\n  const [error, setError] = useState(false); // Track errors\n\n  // Fetching the images from GraphQL query\n  const blogImage1 = data.blogImage1?.childImageSharp?.fluid || null;\n  const blogImage2 = data.blogImage2?.childImageSharp?.fluid || null;\n  const blogImage3 = data.blogImage3?.childImageSharp?.fluid || null;\n  const blogImage4 = data.blogImage4?.childImageSharp?.fluid || null;\n  const blogImage5 = data.blogImage5?.childImageSharp?.fluid || null;\n  const blogImage6 = data.blogImage6?.childImageSharp?.fluid || null;\n\n  const blogImageArray = [blogImage1, blogImage2, blogImage3, blogImage4, blogImage5, blogImage6];\n\n  useEffect(() => {\n    const fetchPriceList = async () => {\n      try {\n        const API_URL = 'http://dhaneshnco.in/api/pricelist';\n        const response = await fetch(API_URL);\n        if (!response.ok) throw new Error(`Failed to fetch price list data. Status: ${response.status}`);\n        const data = await response.json();\n\n        // Add logic to map local images for matching filenames\n        const enrichedData = data.map((item, index) => ({\n          ...item,\n          image: blogImageArray[index % blogImageArray.length], // Cycle through local images\n        }));\n\n        setPriceListData(enrichedData);\n      } catch (error) {\n        console.error('Error fetching price list:', error);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPriceList();\n  }, [blogImageArray]);\n\n  return (\n    <Layout>\n      <SEO title=\"Price List\" description=\"Browse and download our latest price lists\" />\n\n      <TextHeader mainHeader=\"Price List\" size=\"Large\" />\n\n      {!isLoading ? (\n        error ? (\n          <ContentBlock>\n            <p style={{ color: 'red' }}>Failed to load the price list. Please try again later.</p>\n          </ContentBlock>\n        ) : priceListData.length > 0 ? (\n          <ContentBlock>\n            <BlogPostContainer xtraWide cards={3}>\n              {priceListData.map((item, index) => (\n                <motion.div\n                  key={item.id || index}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  <FeaturedBlogPost\n                    pricelistTitle={item.file_name} // Use the file name as title\n                    blogInfo={item}\n                    image={item.image || blogImage1} // Fallback to first image if none\n                    link={`http://100.115.154.61:5000/download.php?id=${item.id}`} // Construct dynamic download link\n                  />\n                </motion.div>\n              ))}\n            </BlogPostContainer>\n          </ContentBlock>\n        ) : (\n          <ContentBlock>\n            <p>No price list data available at the moment.</p>\n          </ContentBlock>\n        )\n      ) : (\n        <ContentBlock>\n          <div className=\"loader\">Loading...</div>\n        </ContentBlock>\n      )}\n    </Layout>\n  );\n};\n\nexport default PriceList;\n\nexport const blogImageMainFragment = graphql`\n  fragment blogImageMain on File {\n    childImageSharp {\n      fluid(maxWidth: 400, quality: 100) {\n        ...GatsbyImageSharpFluid\n        ...GatsbyImageSharpFluidLimitPresentationSize\n      }\n    }\n  }\n`;\n\nexport const pageQuery = graphql`\n  query {\n    blogImage1: file(relativePath: { eq: \"blog/trial1.png\" }) {\n      ...blogImageMain\n    }\n    blogImage2: file(relativePath: { eq: \"blog/trial2.png\" }) {\n      ...blogImageMain\n    }\n    blogImage3: file(relativePath: { eq: \"blog/trial3.png\" }) {\n      ...blogImageMain\n    }\n    blogImage4: file(relativePath: { eq: \"blog/trial4.png\" }) {\n      ...blogImageMain\n    }\n    blogImage5: file(relativePath: { eq: \"blog/trial5.png\" }) {\n      ...blogImageMain\n    }\n    blogImage6: file(relativePath: { eq: \"blog/trial6.png\" }) {\n      ...blogImageMain\n    }\n  }\n`;\n\nPriceList.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nPriceList.defaultProps = {\n  data: {},\n};\n"],"names":["newStyled","bind","forEach","tagName","BlogPostImage","_ref","className","image","src","___EmotionJSX","Img","join","style","borderRadius","fluid","_styled","target","defaultProps","FeaturedPost","blogInfo","pricelistTitle","title","summary","link","textAlign","marginBottom","marginTop","TextHeader","size","mainHeader","alignHeader","TextParagraph","paragraphs","small","Button","onClick","async","response","fetch","ok","Error","blob","url","window","URL","createObjectURL","tempLink","document","createElement","href","download","click","revokeObjectURL","error","console","rel","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginRight","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","points","numPoints","generateLinearEasing","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","BlogPostContainer","xtraWide","cards","cardWidthMed","cardWidthLarge","PriceList","_data$blogImage","_data$blogImage$child","_data$blogImage2","_data$blogImage2$chil","_data$blogImage3","_data$blogImage3$chil","_data$blogImage4","_data$blogImage4$chil","_data$blogImage5","_data$blogImage5$chil","_data$blogImage6","_data$blogImage6$chil","data","isLoading","setIsLoading","useState","priceListData","setPriceListData","setError","blogImage1","childImageSharp","blogImage2","blogImage3","blogImage4","blogImage5","blogImage6","blogImageArray","API_URL","status","enrichedData","json","fetchPriceList","Layout","SEO","description","ContentBlock","div","FeaturedBlogPost","file_name"],"sourceRoot":""}