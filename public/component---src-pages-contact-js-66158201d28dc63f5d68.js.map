{"version":3,"file":"component---src-pages-contact-js-66158201d28dc63f5d68.js","mappings":"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","sources":["webpack://dhanesh-and-company/./src/components/ContentText/ContentText.js","webpack://dhanesh-and-company/./src/components/SimpleIcon/SimpleIcon.js","webpack://dhanesh-and-company/./src/components/TextParagraph/TextParagraph.js","webpack://dhanesh-and-company/./src/components/TriSection/TriSection.js","webpack://dhanesh-and-company/./src/components/ContentBlockContactPage/ContentBlockContactPage.js","webpack://dhanesh-and-company/./src/pagesInput/contact.js","webpack://dhanesh-and-company/./src/pages/contact.js"],"sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst ContentText = ({ className, xtraWide, children }) => {\n  const colums = xtraWide ? 12 : 10\n\n  return (\n    <div className={[className, 'row justify-content-center'].join(' ')}>\n      <div\n        className={`col-xl-${colums} d-flex flex-column justify-content-around`}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nconst StyledContentText = styled(ContentText)``\n\nexport default StyledContentText\n\nContentText.propTypes = {\n  /**\n   * Header Content\n   */\n  xtraWide: PropTypes.bool,\n  /**\n   * Emotion classname\n   */\n  className: PropTypes.string,\n  /**\n   * Additional elements to add\n   */\n  children: PropTypes.object,\n}\n\nContentText.defaultProps = {\n  xtraWide: false,\n  children: '',\n  className: '',\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst SimpleIcon = ({ className, icon }) => (\n  <div className={['d-flex', className].join(' ')}>\n    <i className={[icon, 'm-auto text-highlight'].join(' ')} />\n  </div>\n)\n\nconst StyledSimpleIcon = styled(SimpleIcon)`\n  height: 7rem;\n  i {\n    font-size: 4.5rem;\n    &:hover {\n      font-size: 5rem;\n    }\n  }\n`\n\nexport default StyledSimpleIcon\n\nSimpleIcon.propTypes = {\n  /**\n   * Content to go in container\n   */\n  icon: PropTypes.string,\n  /**\n   * Emotion classname\n   */\n  className: PropTypes.string,\n}\n\nSimpleIcon.defaultProps = {\n  icon: '',\n  className: '',\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst TextParagraph = ({ className, paragraphs, children, bs, small }) => (\n  <>\n    {Array.isArray(paragraphs) ? (\n      paragraphs.map(paragraph => (\n        <p className={[className, bs].join(' ')}>\n          {paragraph} {children}\n        </p>\n      ))\n    ) : (\n      <p className={[className, bs].join(' ')}>\n        {paragraphs} {children}\n      </p>\n    )}\n  </>\n)\n\nconst StyledTextParagraph = styled(TextParagraph)`\n  font-size: ${props => (props.small ? '1rem' : '1.25rem')};\n`\n\nexport default StyledTextParagraph\n\nTextParagraph.propTypes = {\n  /**\n   * Header Content\n   */\n  className: PropTypes.string,\n  /**\n   * Header Content\n   */\n  children: PropTypes.object,\n  /**\n   * Set background color of container.  Use either props.color or leave blank.\n   */\n  paragraphs: PropTypes.array,\n  /**\n   * Set background color of container.  Use either props.color or leave blank.\n   */\n  small: PropTypes.bool,\n  /**\n   * Set background color of container.  Use either props.color or leave blank.\n   */\n  bs: PropTypes.string,\n}\n\nTextParagraph.defaultProps = {}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst TriSection = ({ children, className, noCards, xtraWide }) => {\n  const width = xtraWide ? 12 : 10\n  const cardWidth = Math.floor(width / noCards)\n\n  return (\n    <div className={['row justify-content-center', className].join(' ')}>\n      {children.map(child => (\n        <div className={`col-12 col-md-${cardWidth} mb-4`}>{child}</div>\n      ))}\n    </div>\n  )\n}\n\nconst StyledTriSection = styled(TriSection)``\n\nexport default StyledTriSection\n\nTriSection.propTypes = {\n  /**\n   * Emotion classname\n   */\n  children: PropTypes.object,\n  /**\n   * Emotion classname\n   */\n  className: PropTypes.string,\n  /**\n   * Title of info section.\n   */\n  noCards: PropTypes.number,\n  /**\n   * Title of info section.\n   */\n  xtraWide: PropTypes.bool,\n}\n\nTriSection.defaultProps = {\n  className: '',\n  children: [\n    {\n      icon: 'icon-question',\n      header: 'Disrupt',\n      text:\n        'Take action and be accountable for building positive habits to achieve your goals.',\n      className: '',\n    },\n    {\n      icon: 'icon-question',\n      header: 'Disrupt',\n      text:\n        'Take action and be accountable for building positive habits to achieve your goals.',\n      className: '',\n    },\n    {\n      icon: 'icon-question',\n      header: 'Disrupt',\n      text:\n        'Take action and be accountable for building positive habits to achieve your goals.',\n      className: '',\n    },\n  ],\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst ContentBlockContactPage = ({ children, className, color, bs }) => {\n  const colorBG = color ? 'bg-light' : ''\n\n  return (\n    <section className={['container-fluid', colorBG, className, bs].join(' ')}>\n      <div className=\"container py-5\">{children}</div>\n    </section>\n  )\n}\n\nconst StyledContentBlockContactPage = styled(ContentBlockContactPage)``\n\nexport default StyledContentBlockContactPage\n\nContentBlockContactPage.propTypes = {\n  /**\n   * Content to go in container\n   */\n  children: PropTypes.object,\n  /**\n   * Emotion classname\n   */\n  className: PropTypes.string,\n  /**\n   * Set background color of container.  Use either props.color or leave blank.\n   */\n  color: PropTypes.object,\n  /**\n   * Set background color of container.  Use either props.color or leave blank.\n   */\n  bs: PropTypes.string,\n}\n\nContentBlockContactPage.defaultProps = {\n  children: '',\n  className: '',\n  color: '',\n}\n","const inputData = {\n  openParagraph:\n    \"So whether you are looking to upgrade your home appliances or need new switchgear, it is best to approach the dealers in Mumbai.\",\n  contactOptionsArray: [\n    {\n      icon: 'icon-envelope',\n      header: 'Email',\n      text: 'dhanesh_co@yahoo.co.in',\n      href: 'mailto:dhanesh@yahoo.co.in?subject=Product enquiry',\n    },\n    {\n      icon: 'icon-phone',\n      header: 'Phone',\n      text: '022 - 2687 3598',\n      href: 'tel:022-26873598',\n    },\n    {\n      icon: 'fas fa-map-marker-alt',\n      header: 'Address',\n      text: 'Address',\n      href: 'https://maps.app.goo.gl/vxUCzqwaCX15NhMg9',\n    },\n  ],\n  faqText: [\n    {\n      question: \"Does an electric goods dealer also provide installation services?\",\n      answer: \"Yes, many dealers provide installation services to customers for appliances that need expert supervision.\",\n    },\n    {\n      question: \"Does Dhanesh & Co have modular sockets?\",\n      answer: \"Most Electrical Goods Dealers provide modular sockets and switches on sale. You can directly call the dealer and inquire about the product's availability.\",\n    },\n    {\n      question: \"What appliances and gadgets are available at Dhanesh & Co?\",\n      answer: \"As Dhanesh & Co is an authorised electric goods dealer in Mumbai, it has every essential electrical appliance and gadget like wires, switchboards, capacitors, etc.\",\n    },\n    {\n      question: \"Can I get my electrical appliance replaced?\",\n      answer: \"Yes, many dealers provide replacement services only if the gadget you purchased is on the warranty period. We suggest you directly contact Dhanesh & Co to check if the service is available for any particular appliance or not.\",\n    },\n    {\n      question: \"Is repairing service available at the dealer?\",\n      answer: \"Not all dealers provide repairing services. It is better to consult Dhanesh & Co to check if they can assist with the same.\",\n    },\n  ],\n};\n\nexport default inputData;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport Layout from '../components/layout';\nimport ContentBlockContactPage from '../components/ContentBlockContactPage';\nimport TextHeader from '../components/TextHeader';\nimport TextParagraph from '../components/TextParagraph';\nimport ContentText from '../components/ContentText';\nimport TriSection from '../components/TriSection';\nimport SimpleIcon from '../components/SimpleIcon';\nimport TextAnchor from '../components/TextAnchor';\nimport SEO from '../components/seo';\nimport inputData from '../pagesInput/contact';\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Footer from '../components/Footer'; // Import the Footer component\n\nconst ContactPage = ({ data, className }) => {\n  const { openParagraph, contactOptionsArray } = inputData;\n\n  return (\n    <Layout className={className} contact>\n      <SEO\n        title=\"Contact Details\"\n        description=\"Contact Dhanesh and company to get enquiry and product details. Email: dhanesh@essentialcoaching.co.uk\"\n      />\n\n      <ContentBlockContactPage className=\"d-flex align-items-center py-5\">\n        <ContentText>\n          <TextHeader mainHeader=\"Let's Connect...\" />\n          <TextParagraph paragraphs={openParagraph} />\n        </ContentText>\n\n        <TriSection noCards={3}>\n          {contactOptionsArray.map((item, index) => (\n            <TextAnchor href={item.href} key={index}>\n              <SimpleIcon icon={item.icon} />\n              <TextParagraph\n                paragraphs={item.text}\n                bs=\"text-center text-break text-highlight\"\n                small\n              />\n            </TextAnchor>\n          ))}\n        </TriSection>\n\n        <ContentText>\n          <TextHeader mainHeader=\"Frequently Asked Questions\" />\n          <FAQAccordion faqs={inputData.faqText} />\n        </ContentText>\n      </ContentBlockContactPage>\n\n      <Footer /> {/* Add Footer here */}\n    </Layout>\n  );\n};\n\nconst FAQAccordion = ({ faqs }) => {\n  return (\n    <div>\n      {faqs.map((faq, index) => (\n        <Accordion \n          key={index} \n          style={{ marginBottom: '1rem', backgroundColor: 'transparent', boxShadow: 'none' }} // Set background and remove shadow\n        >\n          <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={`panel${index}-content`} id={`panel${index}-header`}>\n            <Typography variant=\"body1\"> {/* Removed fontWeight to keep it normal */}\n              {faq.question}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails style={{ backgroundColor: 'transparent' }}> {/* Ensure details background is also transparent */}\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {faq.answer}\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </div>\n  );\n};\n\nconst StyledContactPage = styled(ContactPage)`\n  a {\n    text-decoration: inherit;\n    color: black;\n  }\n\n  a:visited {\n    text-decoration: inherit;\n    color: inherit;\n  }\n\n  .content {\n    padding: 20px;\n    border-radius: 8px;\n    /* Removed background color and shadow for seamless integration */\n  }\n`;\n\nexport default StyledContactPage;\n\nContactPage.propTypes = {\n  data: PropTypes.object,\n  className: PropTypes.string,\n};\n"],"names":["ContentText","_ref","className","xtraWide","children","colums","___EmotionJSX","join","_styled","target","defaultProps","SimpleIcon","icon","name","styles","TextParagraph","paragraphs","bs","small","React","Array","isArray","map","paragraph","props","TriSection","noCards","width","cardWidth","Math","floor","child","header","text","ContentBlockContactPage","color","colorBG","openParagraph","contactOptionsArray","href","faqText","question","answer","ContactPage","data","inputData","Layout","contact","SEO","title","description","TextHeader","mainHeader","item","index","TextAnchor","key","FAQAccordion","faqs","Footer","_ref2","faq","Accordion","style","marginBottom","backgroundColor","boxShadow","AccordionSummary","expandIcon","ExpandMoreIcon","id","Typography","variant","AccordionDetails"],"sourceRoot":""}